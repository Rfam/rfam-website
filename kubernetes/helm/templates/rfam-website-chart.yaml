# ConfigMap for application configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: rfam-config
  namespace: {{ .Release.Namespace }}
data:
  DATABASE_HOST: {{ .Values.DATABASE_HOST | quote }}
  DATABASE_PORT: {{ .Values.DATABASE_PORT | quote }}
  DATABASE_NAME: {{ .Values.DATABASE_NAME | quote }}
  DATABASE_USER: {{ .Values.DATABASE_USER | quote }}
  EBI_PROXY: {{ .Values.EBI_PROXY | quote }}
  REDIS_HOST: "redis-service"
  REDIS_PORT: "6379"
  PERL5LIB: "/src/RfamWeb:/src/Rfam/Schemata:/src/PfamBase/lib:/src/PfamLib:/src/PfamSchemata"
  RFAMWEB_CONFIG: "/src/RfamWeb/config/rfamweb.conf"
  DBIC_TRACE: "1"
---
# Secret for sensitive data
apiVersion: v1
kind: Secret
metadata:
  name: rfam-secrets
  namespace: {{ .Release.Namespace }}
type: Opaque
data:
  DATABASE_PASSWORD: {{ .Values.DATABASE_PASSWORD | b64enc | quote }}
---
# Redis Service
apiVersion: v1
kind: Service
metadata:
  name: redis-service
  namespace: {{ .Release.Namespace }}
  labels:
    app: redis
spec:
  selector:
    app: redis
  ports:
  - port: 6379
    targetPort: 6379
    protocol: TCP
---
# Redis Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: {{ .Release.Namespace }}
  labels:
    app: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:7-alpine
        ports:
        - containerPort: 6379
        command: ["redis-server"]
        args: 
        - --maxmemory
        - "256mb"
        - --maxmemory-policy
        - allkeys-lru
        - --save
        - ""
        - --appendonly
        - "no"
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          tcpSocket:
            port: 6379
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          tcpSocket:
            port: 6379
          initialDelaySeconds: 5
          periodSeconds: 5
---
# Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rfam-web
  namespace: {{ .Release.Namespace }}
  labels:
    app: rfam-web
spec:
  replicas: {{ .Values.rfamReplicas }}
  selector:
    matchLabels:
      app: rfam-web
  template:
    metadata:
      labels:
        app: rfam-web
    spec:
      containers:
      - name: rfam-web
        image: ghcr.io/rfam/rfam-website:latest
        imagePullPolicy: Always
        ports:
        - containerPort: {{ .Values.rfamPort }}
          name: http
        env:
        - name: DATABASE_HOST
          valueFrom:
            configMapKeyRef:
              name: rfam-config
              key: DATABASE_HOST
        - name: DATABASE_PORT
          valueFrom:
            configMapKeyRef:
              name: rfam-config
              key: DATABASE_PORT
        - name: DATABASE_NAME
          valueFrom:
            configMapKeyRef:
              name: rfam-config
              key: DATABASE_NAME
        - name: DATABASE_USER
          valueFrom:
            configMapKeyRef:
              name: rfam-config
              key: DATABASE_USER
        - name: DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: rfam-secrets
              key: DATABASE_PASSWORD
        - name: EBI_PROXY
          valueFrom:
            configMapKeyRef:
              name: rfam-config
              key: EBI_PROXY
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: rfam-config
              key: REDIS_HOST
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: rfam-config
              key: REDIS_PORT
        - name: PERL5LIB
          valueFrom:
            configMapKeyRef:
              name: rfam-config
              key: PERL5LIB
        - name: RFAMWEB_CONFIG
          valueFrom:
            configMapKeyRef:
              name: rfam-config
              key: RFAMWEB_CONFIG
        - name: DBIC_TRACE
          valueFrom:
            configMapKeyRef:
              name: rfam-config
              key: DBIC_TRACE
        # Performance environment variables
        - name: CATALYST_DEBUG
          value: "0"
        - name: PERL_CARTON_PATH
          value: "/src/local"
        # Proxy settings (only for external connections)
        - name: http_proxy
          value: {{ .Values.EBI_PROXY | quote }}
        - name: HTTP_PROXY
          value: {{ .Values.EBI_PROXY | quote }}
        - name: https_proxy
          value: {{ .Values.EBI_PROXY | quote }}
        - name: HTTPS_PROXY
          value: {{ .Values.EBI_PROXY | quote }}
        - name: no_proxy
          value: "localhost,127.0.0.1,redis-service,rfam-web-service,10.252.0.0/16"
        - name: NO_PROXY
          value: "localhost,127.0.0.1,redis-service,rfam-web-service,10.252.0.0/16"
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        # livenessProbe:
        #   httpGet:
        #     path: /
        #     port: {{ .Values.rfamPort }}
        #   initialDelaySeconds: 90
        #   periodSeconds: 30
        #   timeoutSeconds: 15
        #   failureThreshold: 3
        # readinessProbe:
        #   httpGet:
        #     path: /
        #     port: {{ .Values.rfamPort }}
        #   initialDelaySeconds: 60
        #   periodSeconds: 15
        #   timeoutSeconds: 15
        #   failureThreshold: 5
        # startupProbe:
        #   httpGet:
        #     path: /
        #     port: {{ .Values.rfamPort }}
        #   initialDelaySeconds: 30
        #   periodSeconds: 10
        #   timeoutSeconds: 15
        #   failureThreshold: 18
      restartPolicy: Always
---
# Service
apiVersion: v1
kind: Service
metadata:
  name: rfam-web-service
  namespace: {{ .Release.Namespace }}
  labels:
    app: rfam-web
spec:
  selector:
    app: rfam-web
  ports:
  - name: http
    port: 80
    targetPort: {{ .Values.rfamPort }}
    protocol: TCP
    nodePort: 30080
  type: NodePort
---
# Ingress for external access
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: rfam-web-ingress
  namespace: {{ .Release.Namespace }}
  labels:
    app: rfam-web
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization"
spec:
  rules:
  - host: rfam-{{ .Release.Namespace }}.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: rfam-web-service
            port:
              number: 80
---
# Horizontal Pod Autoscaler for dynamic scaling
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: rfam-web-hpa
  namespace: {{ .Release.Namespace }}
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: rfam-web
  minReplicas: {{ .Values.rfamReplicas }}
  maxReplicas: {{ .Values.rfamReplicas | mul 3 }}
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60