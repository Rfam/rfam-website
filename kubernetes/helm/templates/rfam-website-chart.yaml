# ConfigMap for application configuration (non-sensitive only)
apiVersion: v1
kind: ConfigMap
metadata:
  name: rfam-config
  namespace: {{ .Release.Namespace }}
data:
  EBI_PROXY: {{ .Values.EBI_PROXY | quote }}
  REDIS_HOST: "redis-service"
  REDIS_PORT: "6379"
  PERL5LIB: "/src/RfamWeb:/src/Rfam/Schemata:/src/PfamBase/lib:/src/PfamLib:/src/PfamSchemata"
  RFAMWEB_CONFIG: "/src/RfamWeb/config/rfamweb.conf"
  DBIC_TRACE: "1"
---
{{- if not .Values.secret.existingSecret }}
# Secret for sensitive data (only created if not using existing secret)
apiVersion: v1
kind: Secret
metadata:
  name: rfam-secrets
  namespace: {{ .Release.Namespace }}
type: Opaque
data:
  {{- if .Values.secret.databaseHost }}
  DATABASE_HOST: {{ .Values.secret.databaseHost | quote }}
  {{- else }}
  DATABASE_HOST: {{ required "DATABASE_HOST must be provided when not using existing secret" .Values.secret.databaseHost }}
  {{- end }}
  {{- if .Values.secret.databasePort }}
  DATABASE_PORT: {{ .Values.secret.databasePort | quote }}
  {{- else }}
  DATABASE_PORT: {{ required "DATABASE_PORT must be provided when not using existing secret" .Values.secret.databasePort }}
  {{- end }}
  {{- if .Values.secret.databaseName }}
  DATABASE_NAME: {{ .Values.secret.databaseName | quote }}
  {{- else }}
  DATABASE_NAME: {{ required "DATABASE_NAME must be provided when not using existing secret" .Values.secret.databaseName }}
  {{- end }}
  {{- if .Values.secret.databaseUser }}
  DATABASE_USER: {{ .Values.secret.databaseUser | quote }}
  {{- else }}
  DATABASE_USER: {{ required "DATABASE_USER must be provided when not using existing secret" .Values.secret.databaseUser }}
  {{- end }}
  {{- if .Values.secret.databasePassword }}
  DATABASE_PASSWORD: {{ .Values.secret.databasePassword | quote }}
  {{- else }}
  DATABASE_PASSWORD: {{ required "DATABASE_PASSWORD must be provided when not using existing secret" .Values.secret.databasePassword }}
  {{- end }}
{{- end }}
---
# Redis Service
apiVersion: v1
kind: Service
metadata:
  name: redis-service
  namespace: {{ .Release.Namespace }}
  labels:
    app: redis
spec:
  selector:
    app: redis
  ports:
  - port: 6379
    targetPort: 6379
    protocol: TCP
---
# Redis Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: {{ .Release.Namespace }}
  labels:
    app: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:7-alpine
        ports:
        - containerPort: 6379
        command: ["redis-server"]
        args: 
        - --maxmemory
        - "256mb"
        - --maxmemory-policy
        - allkeys-lru
        - --save
        - ""
        - --appendonly
        - "no"
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        livenessProbe:
          tcpSocket:
            port: 6379
          initialDelaySeconds: 5
          periodSeconds: 10
        readinessProbe:
          tcpSocket:
            port: 6379
          initialDelaySeconds: 1
          periodSeconds: 5
---
# Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rfam-website
  namespace: {{ .Release.Namespace }}
  labels:
    app: rfam-website
spec:
  replicas: {{ .Values.rfamReplicas }}
  selector:
    matchLabels:
      app: rfam-website
  template:
    metadata:
      labels:
        app: rfam-website
    spec:
      containers:
      - name: rfam-website
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - containerPort: {{ .Values.rfamPort }}
          name: http
        env:
        # All database parameters now come from secrets
        - name: DATABASE_HOST
          valueFrom:
            secretKeyRef:
              {{- if .Values.secret.existingSecret }}
              name: {{ .Values.secret.existingSecret }}
              {{- else }}
              name: rfam-secrets
              {{- end }}
              key: DATABASE_HOST
        - name: DATABASE_PORT
          valueFrom:
            secretKeyRef:
              {{- if .Values.secret.existingSecret }}
              name: {{ .Values.secret.existingSecret }}
              {{- else }}
              name: rfam-secrets
              {{- end }}
              key: DATABASE_PORT
        - name: DATABASE_NAME
          valueFrom:
            secretKeyRef:
              {{- if .Values.secret.existingSecret }}
              name: {{ .Values.secret.existingSecret }}
              {{- else }}
              name: rfam-secrets
              {{- end }}
              key: DATABASE_NAME
        - name: DATABASE_USER
          valueFrom:
            secretKeyRef:
              {{- if .Values.secret.existingSecret }}
              name: {{ .Values.secret.existingSecret }}
              {{- else }}
              name: rfam-secrets
              {{- end }}
              key: DATABASE_USER
        - name: DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              {{- if .Values.secret.existingSecret }}
              name: {{ .Values.secret.existingSecret }}
              {{- else }}
              name: rfam-secrets
              {{- end }}
              key: DATABASE_PASSWORD
        # Non-sensitive config from ConfigMap
        - name: EBI_PROXY
          valueFrom:
            configMapKeyRef:
              name: rfam-config
              key: EBI_PROXY
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: rfam-config
              key: REDIS_HOST
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: rfam-config
              key: REDIS_PORT
        - name: PERL5LIB
          valueFrom:
            configMapKeyRef:
              name: rfam-config
              key: PERL5LIB
        - name: RFAMWEB_CONFIG
          valueFrom:
            configMapKeyRef:
              name: rfam-config
              key: RFAMWEB_CONFIG
        - name: DBIC_TRACE
          valueFrom:
            configMapKeyRef:
              name: rfam-config
              key: DBIC_TRACE
        # Performance environment variables
        - name: CATALYST_DEBUG
          value: "0"
        - name: PERL_CARTON_PATH
          value: "/src/local"
        # Proxy settings (only for external connections)
        - name: http_proxy
          value: {{ .Values.EBI_PROXY | quote }}
        - name: HTTP_PROXY
          value: {{ .Values.EBI_PROXY | quote }}
        - name: https_proxy
          value: {{ .Values.EBI_PROXY | quote }}
        - name: HTTPS_PROXY
          value: {{ .Values.EBI_PROXY | quote }}
        - name: no_proxy
          value: "localhost,127.0.0.1,redis-service,rfam-website-service,10.252.0.0/16"
        - name: NO_PROXY
          value: "localhost,127.0.0.1,redis-service,rfam-website-service,10.252.0.0/16"
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        # OPTIMIZED PROBES
        startupProbe:
          httpGet:
            path: /
            port: {{ .Values.rfamPort }}
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 10
          failureThreshold: 12
        readinessProbe:
          httpGet:
            path: /
            port: {{ .Values.rfamPort }}
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 10
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /
            port: {{ .Values.rfamPort }}
          initialDelaySeconds: 30
          periodSeconds: 15
          timeoutSeconds: 10
          failureThreshold: 3
      restartPolicy: Always
---
# Service
apiVersion: v1
kind: Service
metadata:
  name: rfam-website-service
  namespace: {{ .Release.Namespace }}
  labels:
    app: rfam-website
spec:
  selector:
    app: rfam-website
  ports:
  - name: http
    port: 80
    targetPort: {{ .Values.rfamPort }}
    protocol: TCP
    nodePort: 30080
  type: NodePort
---
# Ingress for external access
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: rfam-website-ingress
  namespace: {{ .Release.Namespace }}
  labels:
    app: rfam-website
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization"
spec:
  rules:
  - host: rfam-{{ .Release.Namespace }}.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: rfam-website-service
            port:
              number: 80
---
# Horizontal Pod Autoscaler for dynamic scaling
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: rfam-website-hpa
  namespace: {{ .Release.Namespace }}
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: rfam-website
  minReplicas: {{ .Values.rfamReplicas }}
  maxReplicas: {{ .Values.rfamReplicas | mul 3 }}
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60