import { MSAData, SecondaryStructure } from './types';
export declare class MSAViewer extends HTMLElement {
    _data?: MSAData & {
        secondaryStructure?: SecondaryStructure;
    };
    _apiEndpoint?: string;
    _identifier?: string;
    _apiUrl?: string;
    _loading: boolean;
    _error?: string;
    _nightingaleLoaded: boolean;
    _sequenceLength: number;
    _height: number;
    _width: number;
    _labelWidth: number;
    _displayStart: number;
    _displayEnd: number;
    private _navigationTrack?;
    private _linksTrack?;
    private _secondaryStructureTrack?;
    private _referenceTrack?;
    private _msaTrack?;
    private _scrollboxObserver?;
    constructor();
    static get observedAttributes(): string[];
    get apiEndpoint(): string | undefined;
    get identifier(): string | undefined;
    get height(): number;
    get width(): number;
    get labelWidth(): number;
    get displayStart(): number;
    get displayEnd(): number;
    set apiEndpoint(value: string | undefined);
    set identifier(value: string | undefined);
    set height(value: number);
    set width(value: number);
    set labelWidth(value: number);
    set displayStart(value: number);
    set displayEnd(value: number);
    zoomIn(): void;
    zoomOut(): void;
    private loadNightingale;
    updateApiUrl(): void;
    updateTrackConfig(config: Partial<any>): void;
    connectedCallback(): Promise<void>;
    disconnectedCallback(): void;
    attributeChangedCallback(name: string, oldValue: string, newValue: string): void;
    private loadDataFromApi;
    private getDefaultDisplayEnd;
    private render;
    private renderTracks;
    private setupEventDelegation;
    private handleLabelClick;
}
